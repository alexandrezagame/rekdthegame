[{"/Users/jesper/Desktop/rekdthegame/src/lib/commerce.js":"1","/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/Checkout/Checkout.jsx":"2","/Users/jesper/Desktop/rekdthegame/src/App.js":"3","/Users/jesper/Desktop/rekdthegame/src/components/Navbar/styles.js":"4","/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/Checkout/styles.js":"5","/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/AddressForm.jsx":"6","/Users/jesper/Desktop/rekdthegame/src/components/Products/Product/Product.jsx":"7","/Users/jesper/Desktop/rekdthegame/src/components/Products/Products.jsx":"8","/Users/jesper/Desktop/rekdthegame/src/index.js":"9","/Users/jesper/Desktop/rekdthegame/src/components/Cart/styles.js":"10","/Users/jesper/Desktop/rekdthegame/src/components/Cart/Cart.jsx":"11","/Users/jesper/Desktop/rekdthegame/src/components/Products/styles.js":"12","/Users/jesper/Desktop/rekdthegame/src/components/Navbar/Navbar.jsx":"13","/Users/jesper/Desktop/rekdthegame/src/components/index.js":"14","/Users/jesper/Desktop/rekdthegame/src/components/Products/Product/ProductPage/ProductPage.jsx":"15"},{"size":132,"mtime":1612188171945,"results":"16","hashOfConfig":"17"},{"size":3591,"mtime":1612263804372,"results":"18","hashOfConfig":"17"},{"size":3090,"mtime":1612279916878,"results":"19","hashOfConfig":"17"},{"size":498,"mtime":1612186822038,"results":"20","hashOfConfig":"17"},{"size":1206,"mtime":1612257633492,"results":"21","hashOfConfig":"17"},{"size":5288,"mtime":1612263242569,"results":"22","hashOfConfig":"17"},{"size":2512,"mtime":1612277722223,"results":"23","hashOfConfig":"17"},{"size":687,"mtime":1612276576224,"results":"24","hashOfConfig":"17"},{"size":197,"mtime":1612182641941,"results":"25","hashOfConfig":"17"},{"size":857,"mtime":1612190884198,"results":"26","hashOfConfig":"17"},{"size":1543,"mtime":1612262710569,"results":"27","hashOfConfig":"17"},{"size":286,"mtime":1612188010023,"results":"28","hashOfConfig":"17"},{"size":1844,"mtime":1612275959043,"results":"29","hashOfConfig":"17"},{"size":366,"mtime":1612277662659,"results":"30","hashOfConfig":"17"},{"size":252,"mtime":1612279999653,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12wb72z",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesper/Desktop/rekdthegame/src/lib/commerce.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/Checkout/Checkout.jsx",["65"],"import React, { useState, useEffect } from 'react';\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport AddressForm from '../AddressForm';\nimport { commerce } from '../../../lib/commerce';\nimport useStyles from './styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport PaymentForm from '../PaymentForm';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActivestep) => prevActivestep + 1);\n  const backStep = () => setActiveStep((prevActivestep) => prevActivestep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, {\n            type: 'cart',\n          });\n          console.log('TOKEN', token)\n          setCheckoutToken(token);\n        } catch (error) {\n          if (activeStep !== steps.length) {\n            history.push('/');\n          }\n        }\n      };\n      generateToken();\n    }\n  }, [cart]);\n  const next = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () =>\n    order.customer ? (\n      <>\n        <div>\n          <Typography variant=\"h5\">\n            Thank you for your purchase, {order.customer.firstname}{' '}\n            {order.customer.lastname}!\n          </Typography>\n          <Divider className={classes.divider} />\n          <Typography variant=\"subtitle2\">\n            Order ref: {order.customer_reference}\n          </Typography>\n        </div>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    ) : (\n      <div className={classes.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    );\n  }\n\n  const Form = () => \n    activeStep === 0 ? (\n      <AddressForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        setShippingData={setShippingData}\n        next={next}\n      />\n    ) : (\n      <PaymentForm\n        checkoutToken={checkoutToken}\n        backStep={backStep}\n        nextStep={nextStep}\n        shippingData={shippingData}\n        onCaptureCheckout={onCaptureCheckout}\n      />\n    );\n  \n\n  return (\n    <>\n        <CssBaseline />\n        <div className={classes.toolbar} />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h4\" align=\"center\">\n              Checkout\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            {activeStep === steps.length ? (\n              <Confirmation />\n            ) : (\n              checkoutToken && <Form />\n            )}\n          </Paper>\n        </main>\n      </>\n  )\n};\n\nexport default Checkout;\n",["66","67"],"/Users/jesper/Desktop/rekdthegame/src/App.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/Navbar/styles.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/CheckoutForm/AddressForm.jsx",["68"],"import {\n  Grid,\n  Typography,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button\n} from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextfield';\nimport { commerce } from '../../lib/commerce';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  console.log('HELLO ARE WE HERE?')\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    stateProvince = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region: stateProvince }\n    );\n\n    setShippingOptions(options);\n    setShippingOption(options[0]);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) {\n      fetchSubdivisions(shippingCountry);\n    }\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) {\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n    }\n  }, [checkoutToken.id, shippingCountry, shippingSubdivision]);\n\n  return (\n    <div>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address line 1\" />\n            <FormInput name=\"email\" label=\"Email\" />\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel> Shipping Country </InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {Object.entries(shippingCountries)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel> Shipping State </InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {Object.entries(shippingSubdivisions)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel> Shipping Options </InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {shippingOptions\n                  .map((sO) => ({\n                    id: sO.id,\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n                  }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </div>\n  );\n};\n\nexport default AddressForm;\n","/Users/jesper/Desktop/rekdthegame/src/components/Products/Product/Product.jsx",[],"/Users/jesper/Desktop/rekdthegame/src/components/Products/Products.jsx",[],"/Users/jesper/Desktop/rekdthegame/src/index.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/Cart/styles.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/Cart/Cart.jsx",[],"/Users/jesper/Desktop/rekdthegame/src/components/Products/styles.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/Navbar/Navbar.jsx",["69","70"],"/Users/jesper/Desktop/rekdthegame/src/components/index.js",[],"/Users/jesper/Desktop/rekdthegame/src/components/Products/Product/ProductPage/ProductPage.jsx",["71"],{"ruleId":"72","severity":1,"message":"73","line":49,"column":6,"nodeType":"74","endLine":49,"endColumn":12,"suggestions":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":57,"column":6,"nodeType":"74","endLine":57,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":3,"nodeType":"84","messageId":"85","endLine":7,"endColumn":11},{"ruleId":"82","severity":1,"message":"86","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":7},{"ruleId":"82","severity":1,"message":"87","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["88"],"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["91"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Button' is defined but never used.",{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"96","text":"97"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"98","text":"99"},[1385,1391],"[activeStep, cart, history]",[1765,1767],"[checkoutToken.id]"]